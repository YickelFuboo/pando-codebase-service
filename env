# =============================================================================
# Knowledge-Service 环境配置模板
# =============================================================================
# 复制此文件为 .env 并根据实际环境修改配置

# =============================================================================
# 基础配置
# =============================================================================
SERVICE_HOST=0.0.0.0
SERVICE_PORT=8002

DEBUG=true
APP_LOG_LEVEL=INFO


# =============================================================================
# 认证配置 (User-Service集成)
# =============================================================================
# User-Service地址 - 用于JWT验证
AUTH_USER_SERVICE_URL=http://user-service:8001

# 请求超时配置（秒）
AUTH_REQUEST_TIMEOUT=5

# JWT相关端点配置
AUTH_JWKS_ENDPOINT=/.well-known/jwks.json
AUTH_JWT_CONFIG_ENDPOINT=/jwt-config
AUTH_BLACKLIST_ENDPOINT=/blacklist

# =============================================================================
# 数据库配置
# =============================================================================
# 数据库类型: postgresql 或 mysql
DATABASE_TYPE=postgresql
# 数据库名称
DB_NAME=knowledge_service
# 数据库连接池配置
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# PostgreSQL 配置
POSTGRESQL_HOST=localhost
POSTGRESQL_PORT=5432
POSTGRESQL_USER=postgres
POSTGRESQL_PASSWORD=clover

# MySQL 配置 (如果使用MySQL)
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_USER=root
MYSQL_PASSWORD=your_password

# =============================================================================
# Redis 配置
# =============================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_SSL=false
REDIS_DECODE_RESPONSES=true
REDIS_SOCKET_CONNECT_TIMEOUT=5
REDIS_SOCKET_TIMEOUT=5
REDIS_RETRY_ON_TIMEOUT=true
REDIS_MAX_CONNECTIONS=10

# =============================================================================
# 文件存储配置
# =============================================================================
# 存储类型: minio, s3, local, azure_sas
STORAGE_TYPE=minio

# MinIO 配置 (推荐用于开发环境)
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_SECURE=false

# S3 配置
S3_REGION=us-east-1
S3_ENDPOINT_URL=https://your-s3-endpoint.com  # 必需，指定S3兼容服务的端点
S3_ACCESS_KEY_ID=your_access_key
S3_SECRET_ACCESS_KEY=your_secret_key
S3_USE_SSL=false

# 本地存储配置 (简单文件存储)
LOCAL_UPLOAD_DIR=./uploads

# Azure Blob Storage SAS配置
AZURE_ACCOUNT_URL=https://yourstorageaccount.blob.core.windows.net
AZURE_SAS_TOKEN=your_sas_token

# Azure Blob Storage SPN配置
AZURE_SPN_ACCOUNT_URL=https://yourstorageaccount.dfs.core.windows.net
AZURE_SPN_CLIENT_ID=your_client_id
AZURE_SPN_CLIENT_SECRET=your_client_secret
AZURE_SPN_TENANT_ID=your_tenant_id
AZURE_SPN_CONTAINER_NAME=your_container

# 阿里云OSS配置
OSS_ACCESS_KEY=your_access_key
OSS_SECRET_KEY=your_secret_key
OSS_ENDPOINT_URL=https://oss-cn-hangzhou.aliyuncs.com
OSS_REGION=cn-hangzhou
OSS_PREFIX_PATH=


# =============================================================================
# 向量存储配置 - Vector Store
# =============================================================================
# 向量存储引擎类型 (elasticsearch, opensearch, infinity)
VECTOR_STORE_ENGINE=elasticsearch
# 向量存储映射文件名称
VECTOR_STORE_MAPPING=es_doc_mapping.json

# Elasticsearch配置
ES_HOSTS=https://localhost:9200
ES_USERNAME=elastic
ES_PASSWORD=clover

# OpenSearch配置
OS_HOSTS=http://localhost:9200
OS_USERNAME=admin
OS_PASSWORD=admin

# =============================================================================
# 模型配置说明 见：app/config/xxx.json
# =============================================================================

# =============================================================================
# 业务配置
# =============================================================================

# 代码分析配置
# 是否启用代码依赖分析 - 分析代码文件之间的依赖关系
ENABLE_CODE_DEPENDENCY_ANALYSIS=false

# 是否启用代码压缩 - 压缩代码内容以减少存储空间
ENABLE_CODE_COMPRESSION=true

# 是否启用智能过滤 - 智能过滤无关的代码文件
ENABLE_SMART_FILTER=true

# 目录格式 - 生成文档目录的格式 (compact/detailed)
CATALOGUE_FORMAT=compact

# 增量更新配置
# 是否启用增量更新 - 只更新发生变化的文件
ENABLE_INCREMENTAL_UPDATE=true

# 仓库功能配置
# 是否启用仓库功能提示任务 - 生成仓库功能相关的提示
ENABLE_WAREHOUSE_FUNCTION_PROMPT_TASK=true

# 是否启用仓库描述任务 - 生成仓库描述信息
ENABLE_WAREHOUSE_DESCRIPTION_TASK=true

# 是否启用文件提交 - 处理文件级别的提交记录
ENABLE_FILE_COMMIT=true

# 是否启用仓库提交 - 处理仓库级别的提交记录
ENABLE_WAREHOUSE_COMMIT=true

# 质量优化配置
# 是否精炼并提高质量 - 对AI生成的内容进行质量优化
REFINE_AND_ENHANCE_QUALITY=true

# 文件过滤配置
# 排除的文件列表 - JSON格式的文件名列表，如：["*.log", "*.tmp"]
EXCLUDED_FILES=[]

# 排除的文件夹列表 - JSON格式的文件夹名列表，如：["node_modules", ".git"]
EXCLUDED_FOLDERS=[]


