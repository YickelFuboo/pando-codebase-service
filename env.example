# =============================================================================
# Knowledge-Service 环境配置模板
# =============================================================================
# 复制此文件为 .env 并根据实际环境修改配置

# =============================================================================
# 应用基础配置
# =============================================================================
APP_NAME=Knowledge-Service
APP_VERSION=1.0.0
DEBUG=false

# 服务配置
SERVICE_HOST=0.0.0.0
SERVICE_PORT=8003


# =============================================================================
# 项目本地临时存户目录结构（先对于项目根目录）
# =============================================================================
# 应用存储的临时目录
tmp_dir = tmp_dir
# 模型缓存配置
MODEL_CACHE_DIR=./cache/models

# Numba 配置
NUMBA_LOGGING=0
NUMBA_DISABLE_JIT=0

# =============================================================================
# 认证配置 (User-Service集成)
# =============================================================================
# User-Service地址 - 用于JWT验证
AUTH_USER_SERVICE_URL=http://user-service:8001

# 请求超时配置（秒）
AUTH_REQUEST_TIMEOUT=5

# JWT相关端点配置
AUTH_JWKS_ENDPOINT=/.well-known/jwks.json
AUTH_JWT_CONFIG_ENDPOINT=/jwt-config
AUTH_BLACKLIST_ENDPOINT=/blacklist

# =============================================================================
# 数据库配置
# =============================================================================
# 数据库类型: postgresql 或 mysql
DATABASE_TYPE=postgresql
# 数据库名称
DB_NAME=knowledge_service
# 数据库连接池配置
DB_POOL_SIZE=10
DB_MAX_OVERFLOW=20

# PostgreSQL 配置
POSTGRESQL_HOST=localhost
POSTGRESQL_PORT=5432
POSTGRESQL_USER=postgres
POSTGRESQL_PASSWORD=your_password

# MySQL 配置 (如果使用MySQL)
MYSQL_HOST=localhost
MYSQL_PORT=3306
MYSQL_USER=root
MYSQL_PASSWORD=your_password

# =============================================================================
# Redis 配置
# =============================================================================
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
REDIS_SSL=false
REDIS_DECODE_RESPONSES=true
REDIS_SOCKET_CONNECT_TIMEOUT=5
REDIS_SOCKET_TIMEOUT=5
REDIS_RETRY_ON_TIMEOUT=true
REDIS_MAX_CONNECTIONS=10

# =============================================================================
# 文件存储配置
# =============================================================================
# 存储类型: minio, s3, local, azure_sas
STORAGE_TYPE=minio

# MinIO 配置 (推荐用于开发环境)
MINIO_ENDPOINT=localhost:9000
MINIO_ACCESS_KEY=minioadmin
MINIO_SECRET_KEY=minioadmin
MINIO_SECURE=false

# S3 配置
S3_REGION=us-east-1
S3_ENDPOINT_URL=https://your-s3-endpoint.com  # 必需，指定S3兼容服务的端点
S3_ACCESS_KEY_ID=your_access_key
S3_SECRET_ACCESS_KEY=your_secret_key
S3_USE_SSL=false

# 本地存储配置 (简单文件存储)
LOCAL_UPLOAD_DIR=./uploads

# Azure Blob Storage SAS配置
AZURE_ACCOUNT_URL=https://yourstorageaccount.blob.core.windows.net
AZURE_SAS_TOKEN=your_sas_token

# Azure Blob Storage SPN配置
AZURE_SPN_ACCOUNT_URL=https://yourstorageaccount.dfs.core.windows.net
AZURE_SPN_CLIENT_ID=your_client_id
AZURE_SPN_CLIENT_SECRET=your_client_secret
AZURE_SPN_TENANT_ID=your_tenant_id
AZURE_SPN_CONTAINER_NAME=your_container

# 阿里云OSS配置
OSS_ACCESS_KEY=your_access_key
OSS_SECRET_KEY=your_secret_key
OSS_ENDPOINT_URL=https://oss-cn-hangzhou.aliyuncs.com
OSS_REGION=cn-hangzhou
OSS_PREFIX_PATH=


# =============================================================================
# 向量存储配置 - Vector Store
# =============================================================================
# 向量存储引擎类型 (elasticsearch, opensearch)
VECTOR_STORE_ENGINE=elasticsearch
# 向量存储映射文件名称
VECTOR_STORE_MAPPING=es_doc_mapping.json

# Elasticsearch配置
ES_HOSTS=https://localhost:9200
ES_USERNAME=elastic
ES_PASSWORD=changeme

# OpenSearch配置
OS_HOSTS=http://localhost:9200
OS_USERNAME=admin
OS_PASSWORD=admin

# 文档处理配置
DOC_MAXIMUM_SIZE=134217728
DOC_BULK_SIZE=4
EMBEDDING_BATCH_SIZE=16

# 最大文件数量限制
MAX_FILE_NUM_PER_USER=1000

# =============================================================================
# Langfuse 配置 - LLM 可观测性平台
# =============================================================================
# 是否启用 Langfuse 可观测性
LANGFUSE_ENABLED=false

# Langfuse 基础配置
LANGFUSE_PUBLIC_KEY=
LANGFUSE_SECRET_KEY=
LANGFUSE_HOST=https://cloud.langfuse.com

# =============================================================================
# 模型配置说明 见：app/config/xxx.json
# =============================================================================


# =============================================================================
# Web搜索配置 - Web Search
# =============================================================================
# Tavily搜索API配置
TAVILY_API_KEY=your_tavily_api_key


# =============================================================================
# RAG配置 - Retrieval-Augmented Generation
# =============================================================================
# RAG运行模式配置
# 0: 完整模式 (Full Mode) - 包含所有功能
#    ✅ 包含所有功能
#    ✅ 内置嵌入模型：自动加载 BAAI/bge-large-zh-v1.5@BAAI 等
#    ✅ 重排序模型：支持 DefaultRerank、YoudaoRerank
#    ✅ PDF解析增强：支持GPU加速的表格识别
#    ✅ 完整模型支持：所有LLM模型功能
# 1: 轻量模式 (Slim Mode) - 精简功能，适合资源受限环境
#    ❌ 禁用内置模型：不自动加载内置嵌入模型
#    ❌ 禁用重排序：不加载重排序模型
#    ❌ 简化PDF解析：不启用GPU加速功能
#    ✅ 基础功能：保留核心RAG功能
#    ✅ 外部模型：仍可使用外部API模型
LIGHTEN_MODE=0

# LLM模型并行请求数量
MAX_CONCURRENT_CHATS=10

# 并发限制配置
MAX_CONCURRENT_CHUNK_BUILDERS=4
MAX_CONCURRENT_MINIO=10